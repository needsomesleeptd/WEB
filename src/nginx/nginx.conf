load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections 1024;  # Adjust this value based on your needs
}

http {
    include /etc/nginx/mime.types;
    charset UTF-8;


   

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'upstream: $upstream_addr - response_time: $upstream_response_time';

    
    # Define a variable for the general path

    upstream balanced_backend {
        server localhost:8080 weight=2;
        server localhost:8081;
        server localhost:8082;
    }

    server {
        listen 80;
        #server_name annots.com;
        set $base_path /home/andrew/uni/web/WEB/src/nginx;
        root $base_path;
        server_tokens off;
        more_set_headers 'server: anotatter'; 
        
        access_log /var/log/nginx/access.log custom;
        #access_log /var/log/nginx/access.log main;

        # Serve index.html for the root and /test paths
        location / {
            autoindex on;
            alias $base_path/static/;
            allow all;
        }

        # Serve Nginx status
        location /status {
            stub_status on;  # Enables the status module to return server statistics
            allow 127.0.0.1;  # Allow access from localhost
            deny all;  # Deny access from all other IPs
        }

        # Proxy for API v2
        location ~* /api/v2/(.*)(\.(css|js|json|map|html|png|yaml)?$) {
            proxy_pass http://localhost:3000/$1$2;
        }

        location = /api/v2/ {
            proxy_pass http://localhost:3000/;
        }

        location /api/v2/ {
            if ( $request_method ~ ^(GET)$) {
                proxy_pass http://balanced_backend;
                break;
            }
            proxy_pass  http://localhost:8080/api/v2/;

        }

        # Proxy for API v1
        location /api/v1/ {
           if ($request_method = GET) {
                proxy_pass http://balanced_backend;
                break;
            }
            proxy_pass  http://localhost:8080/api/v1/;
        }



        # mirrror init
        location ~* /mirror1/api/v2/(.*)(\.(css|js|json|map|html|png|yaml)?$) {
            proxy_pass http://localhost:3000/$1$2;
        }

        location = /mirror1/api/v2/ {
            proxy_pass http://localhost:3000/;
        }

        location /mirror1/api/v2/ {
            # here mirror is served
            proxy_pass  http://localhost:7070/api/v2/; 

        }

        # Proxy for API v1
        location /mirror1/api/v1/ {
            proxy_pass  http://localhost:7070/api/v1/;
        }




        # Admin interface
        location /admin {
            proxy_set_header X-Script-Name /admin;
            proxy_set_header Host $host;
            proxy_pass http://localhost:5050/;
        }

        # Legacy files
        location /legacy {
            alias $base_path/legacy/;
        }

        # Documentation
        location /documentation {
            alias $base_path/;
            index readme.md;
            allow all;  # Allow access to the documentation
        }

        # Test endpoint
        location = /test {
            proxy_pass http://localhost/;
        }

        # Error pages (uncomment if needed)
        # error_page 404 /404.html;
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        #     root /usr/share/nginx/html;
        # }
    }
}